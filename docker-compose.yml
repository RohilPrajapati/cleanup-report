networks:
  app_network:
    driver: bridge

services:
  redis:
    image: redis:7
    ports:
      - "6379:6379"
    networks:
      - app_network

  backend:
    build:
      context: ./backend
    env_file:
      - ./backend/.docker.env
    volumes:
      # Only persist the SQLite database for dev
      - ./backend/db.sqlite3:/app/db.sqlite3
    ports:
      - "8000:8000"
    depends_on:
      - redis
    networks:
      - app_network
    command: uv run gunicorn config.wsgi:application --bind 0.0.0.0:8000 --workers 3

  worker:
    build:
      context: ./backend
    command: uv run celery -A config worker -l info
    env_file:
      - ./backend/.docker.env
    volumes:
      - ./backend/db.sqlite3:/app/db.sqlite3
    depends_on:
      - redis
    networks:
      - app_network

  scheduler:
    build:
      context: ./backend
    command: uv run celery -A config beat -l info --scheduler django_celery_beat.schedulers:DatabaseScheduler
    env_file:
      - ./backend/.docker.env
    volumes:
      - ./backend/db.sqlite3:/app/db.sqlite3
    depends_on:
      - redis
    networks:
      - app_network

  frontend:
    build:
      context: ./frontend
    container_name: frontend
    restart: always
    depends_on:
      - backend
    environment:
      - REACT_APP_API_HOST=http://backend:8000
    networks:
      - app_network

  nginx:
    image: nginx:1.27
    ports:
      - "80:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf:ro  
      - ./frontend/build:/usr/share/nginx/html:ro
    depends_on:
      - backend
      - frontend
    networks:
      - app_network
